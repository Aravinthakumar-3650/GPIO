void setup()
{
  volatile char *dira,*dirb,*dirc,*dirl;
  volatile char *outa,*outb,*outc,*outl;
  volatile long d[8];  
  volatile long i=0, sum=0,num1,num2;

  dira=0x21; *dira=0xff;
  dirb=0x24; *dirb=0xff;
  dirc=0x27; *dirc=0xff;
  dirl=0x10a; *dirl=0xff;

  outa=0x22;
  outb=0x25;
  outc=0x28;
  outl=0x10b;

  char num[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};

  while(1)
  {
    for(i=0;i<8;i++)
    {
      d[i]=scan();       
      volatile char *ink=0x106;
      while(*ink!=0);   
    }

    num1 = d[0]*1000 + d[1]*100 + d[2]*10 + d[3];
    num2 = d[4]*1000 + d[5]*100 + d[6]*10 + d[7];

    sum=num1 * num2;

    if(sum < 10)
    {
      *outa=num[sum];   
    }
    else if(sum<1000)
    {
      *outa=num[sum/100];
      *outb=num[(sum%100)/10];
      *outl=num[sum%10];
    }
    else if(sum<10000)
    {
      *outa=num[sum/1000];
      *outb=num[(sum%1000)/100];
      *outl=num[(sum%100)/10];
      *outc=num[sum%10];
    }
    else
    {
      *outa=0x79; *outb=0x79 ; *outl=0x79; *outc=0x79;
    }
  }
}

volatile char scan()
{
  volatile char row,status;
  volatile char *dirk,*ink,*dirf,*outf;

  dirk=0x107; *dirk=0x00;   
  dirf=0x30;  *dirf=0xff;  
  ink=0x106;  outf=0x31;

  while(1)
  {
    for(row=0;row<4;row++)
    {
      *outf=(1<<row);
      status=*ink;
      if(status!=0)
      {
        if((row==0)&&status==0x01) return 1;
        if((row==0)&&status==0x02) return 2;
        if((row==0)&&status==0x04) return 3;
        if((row==1)&&status==0x01) return 4;
        if((row==1)&&status==0x02) return 5;
        if((row==1)&&status==0x04) return 6;
        if((row==2)&&status==0x01) return 7;
        if((row==2)&&status==0x02) return 8;
        if((row==2)&&status==0x04) return 9;
        if((row==3)&&status==0x02) return 0;
      }
    }
  }
}
