#define CLK 0
#define CS  1
#define DIN 2

volatile char *dira, *outa;
void maxregister(unsigned address,unsigned d1,unsigned d2,unsigned d3,unsigned d4);
void maxstart();
void displayFrame(unsigned char frame[32][8]);
void shiftDisplay(unsigned char frame[32][8], unsigned char nextCol[8]);

unsigned char matrix_1[8] = {0x08,0x0c,0x0a,0x08,0x08,0x08,0x08,0x7f};
unsigned char matrix_2[8] = {0x3c,0x42,0x40,0x40,0x7e,0x02,0x02,0x7e};
unsigned char matrix_3[8] = {0x3c,0x42,0x40,0x3c,0x40,0x42,0x42,0x3c};
unsigned char matrix_4[8] = {0x02,0x02,0x02,0x22,0x22,0x7e,0x20,0x20};

unsigned char frame[32][8];

void setup()
{
  dira = (char*)0x21;
  outa = (char*)0x22;
  maxstart();
  
unsigned char *letters[4] = {matrix_4, matrix_3, matrix_2, matrix_1};

  unsigned char scrollData[32][8];
  for(int d=0; d<4; d++) {
    for(int r=0; r<8; r++) {
      for(int b=0; b<8; b++) {
        if(letters[d][r] & (1 << (7-b)))
          scrollData[d*8 + b][r] = 1;
        else
          scrollData[d*8 + b][r] = 0;
      }
    }
  }

  for(int pos=0; pos<32; pos++) {
    unsigned char newCol[8]={0};
    for(int r=0;r<8;r++){
      if(scrollData[pos][r]) newCol[r]=1;
      else newCol[r]=0;
    }

    shiftDisplay(frame, newCol);
    displayFrame(frame);
    delay(200); 
  }
}

void loop(){}

void shiftDisplay(unsigned char frame[32][8], unsigned char newCol[8])
{
  for(int c=31;c>0;c--)
    for(int r=0;r<8;r++)
      frame[c][r]=frame[c-1][r];
  for(int r=0;r<8;r++)
    frame[0][r]=newCol[r];
}

void displayFrame(unsigned char frame[32][8])
{
  unsigned char cols[4][8];
  for(int i=0;i<4;i++){
    for(int r=0;r<8;r++){
      unsigned char val=0;
      for(int b=0;b<8;b++){
        if(frame[i*8 + b][r])
          val |= (1<<b);  
      }
      cols[i][r]=val;
    }
  }

  for(int r=1;r<=8;r++)
    maxregister(r, cols[0][r-1], cols[1][r-1], cols[2][r-1], cols[3][r-1]);
}

void maxstart()
{
  *dira |= (1<<CLK) | (1<<CS) | (1<<DIN);

  maxregister(0x09,0x00,0x00,0x00,0x00);
  maxregister(0x0A,0x08,0x08,0x08,0x08);
  maxregister(0x0B,0x07,0x07,0x07,0x07);
  maxregister(0x0C,0x01,0x01,0x01,0x01);
  maxregister(0x0F,0x00,0x00,0x00,0x00);

  for(int i=1;i<=8;i++)
    maxregister(i,0x00,0x00,0x00,0x00);
}

void maxregister(unsigned address,unsigned d1,unsigned d2,unsigned d3,unsigned d4)
{
  unsigned char data[4]={d1,d2,d3,d4};
  *outa &= ~(1<<CS);

  for(int matrix=0;matrix<4;matrix++)
  {
    for(int j=7;j>=0;j--)
    {
      *outa &= ~(1<<CLK);
      if(address & (1<<j)) *outa |= (1<<DIN);
      else *outa &= ~(1<<DIN);
      *outa |= (1<<CLK);
    }

    for(int j=7;j>=0;j--)
    {
      *outa &= ~(1<<CLK);
      if(data[matrix] & (1<<j)) *outa |= (1<<DIN);
      else *outa &= ~(1<<DIN);
      *outa |= (1<<CLK);
    }
  }
  *outa |= (1<<CS);
}
