#define CLK 0
#define CS  1
#define DIN 2

volatile char *dira, *outa;
void maxregister(unsigned address, unsigned d1, unsigned d2, unsigned d3, unsigned d4);
void maxstart();
void eraseCharByPos(int pos, unsigned char speed_ms);

unsigned char matrix_E[8] = {0x00,0x7e,0x02,0x02,0x7e,0x02,0x02,0x7e};
unsigned char matrix_T[8] = {0x00,0x3e,0x08,0x08,0x08,0x08,0x08,0x08};
unsigned char matrix_A[8] = {0x00,0x18,0x24,0x42,0x7e,0x42,0x42,0x42};
unsigned char matrix_L[8] = {0x00,0x02,0x02,0x02,0x02,0x02,0x02,0x7e};

void setup()
{
  dira = (char*)0x21;    
  outa = (char*)0x22;   

  maxstart();

  for (int r = 1; r <= 8; r++) {
    maxregister(r, matrix_E[r-1], matrix_T[r-1], matrix_A[r-1], matrix_L[r-1]);
  }
  delay(2000); 

  eraseCharByPos(3, 200); 
  eraseCharByPos(2, 200);
  eraseCharByPos(1, 200);
  eraseCharByPos(0, 200);

}
void loop(){}

void eraseCharByPos(int pos, unsigned char speed_ms)
{
  for (int col = 0; col < 8; col++)
  {
    unsigned char mask = (unsigned char)~(0xFF << (8 - (col + 1)));

    if (pos == 0) { for (int r = 0; r < 8; r++) matrix_E[r] &= mask; }
    if (pos == 1) { for (int r = 0; r < 8; r++) matrix_T[r] &= mask; }
    if (pos == 2) { for (int r = 0; r < 8; r++) matrix_A[r] &= mask; }
    if (pos == 3) { for (int r = 0; r < 8; r++) matrix_L[r] &= mask; }

    for (int row = 1; row <= 8; row++) {
      maxregister(row, matrix_E[row-1], matrix_T[row-1], matrix_A[row-1], matrix_L[row-1]);
    }

    delay(speed_ms);
  }

  if (pos == 0) for (int r = 1; r <= 8; r++) maxregister(r, 0x00, matrix_T[r-1], matrix_A[r-1], matrix_L[r-1]);
  if (pos == 1) for (int r = 1; r <= 8; r++) maxregister(r, matrix_E[r-1], 0x00, matrix_A[r-1], matrix_L[r-1]);
  if (pos == 2) for (int r = 1; r <= 8; r++) maxregister(r, matrix_E[r-1], matrix_T[r-1], 0x00, matrix_L[r-1]);
  if (pos == 3) for (int r = 1; r <= 8; r++) maxregister(r, matrix_E[r-1], matrix_T[r-1], matrix_A[r-1], 0x00);
}

void maxstart()
{
  *dira |= (1<<CLK) | (1<<CS) | (1<<DIN);

  maxregister(0x09, 0,0,0,0);
  maxregister(0x0A, 8,8,8,8);
  maxregister(0x0B, 7,7,7,7);
  maxregister(0x0C, 1,1,1,1);
  maxregister(0x0F, 0,0,0,0);

  for (int i = 1; i <= 8; i++) maxregister(i, 0,0,0,0);
}

void maxregister(unsigned address,unsigned d1,unsigned d2,unsigned d3,unsigned d4)
{
  unsigned char data[4] = { (unsigned char)d1, (unsigned char)d2, (unsigned char)d3, (unsigned char)d4 };
  *outa &= ~(1<<CS);

  for (int matrix = 0; matrix < 4; matrix++)
  {
    for (int j = 7; j >= 0; j--) {
      *outa &= ~(1<<CLK);
      if (address & (1<<j)) *outa |= (1<<DIN); else *outa &= ~(1<<DIN);
      *outa |= (1<<CLK);
    }
    for (int j = 7; j >= 0; j--) {
      *outa &= ~(1<<CLK);
      if (data[matrix] & (1<<j)) *outa |= (1<<DIN); else *outa &= ~(1<<DIN);
      *outa |= (1<<CLK);
    }
  }

  *outa |= (1<<CS);
}
